## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Authentication APIs'
description: |-

  APIs for Authentication
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/users/register
    metadata:
      groupName: 'Authentication APIs'
      groupDescription: |-

        APIs for Authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'Registration Api'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: first_name.
        required: true
        example: ut
        type: string
        custom: []
      last_name:
        name: last_name
        description: last_name.
        required: true
        example: quod
        type: string
        custom: []
      email:
        name: email
        description: 'email, must be unique.'
        required: true
        example: libbie98@example.com
        type: string
        custom: []
      phone:
        name: phone
        description: phone.
        required: true
        example: dignissimos
        type: string
        custom: []
      zipcode:
        name: zipcode
        description: zipcode.
        required: true
        example: asperiores
        type: string
        custom: []
      password:
        name: password
        description: 'password, must be 8 character long.'
        required: true
        example: ']BxzODVA7'
        type: string
        custom: []
      confirm_password:
        name: confirm_password
        description: 'The value and <code>password</code> must match. Must be at least 8 characters.'
        required: true
        example: rgvjrzeegjnhtdfyyvcjxvulsswxnidizpjwookh
        type: string
        custom: []
      user_type:
        name: user_type
        description: 'user_type, must be USER or BUSINESS_OWNER.'
        required: true
        example: culpa
        type: string
        custom: []
    cleanBodyParameters:
      first_name: ut
      last_name: quod
      email: libbie98@example.com
      phone: dignissimos
      zipcode: asperiores
      password: ']BxzODVA7'
      confirm_password: rgvjrzeegjnhtdfyyvcjxvulsswxnidizpjwookh
      user_type: culpa
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "status": true,
          "statusCode": 200,
          "message": "Registration successfully.",
          "data": {
          "user": {
          "id": 1,
          "name": "John Doe",
          "email": "johh@yopmail.com"
          }
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "status": false,
          "statusCode": 401,
          "error": {
          "message": [
          "The first_name field is required.",
          "The last_name field is required.",
          "The email type field is required.",
          "The email field is required.",
          "The password field is required.",
          "The user type field is required."


          ]
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "message": "No detail found!",
          "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users/login
    metadata:
      groupName: 'Authentication APIs'
      groupDescription: |-

        APIs for Authentication
      subgroup: ''
      subgroupDescription: ''
      title: 'login Api'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'email, must be unique.'
        required: true
        example: zdaniel@example.org
        type: string
        custom: []
      password:
        name: password
        description: 'password, must be 8 character long.'
        required: true
        example: 'h`Dk0"Y#elnHngjz-x!K'
        type: string
        custom: []
      user_type:
        name: user_type
        description: 'user_type, must be USER or BUSINESS_OWNER.'
        required: true
        example: qui
        type: string
        custom: []
    cleanBodyParameters:
      email: zdaniel@example.org
      password: 'h`Dk0"Y#elnHngjz-x!K'
      user_type: qui
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "status": true,
          "statusCode": 200,
          "message": "Login successfully.",
          "data": {
          "user": {
          "id": 1,
          "name": "John Doe",
          "email": "johh@yopmail.com",
          "phone": "1234567890",
          "zipcode": "123456",
          "status": 1,
           "profile_picture": "customer/20210914121212image.jpg",
          }
          }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "status": false,
          "statusCode": 401,
          "error": {
          "message": [
          "The email field is required.",
          "The password field is required.",
          "The user type field is required."

          ]
           }
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
          "message": "No detail found!",
          "status": false
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []

openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/v1/users/booking/create:
    post:
      summary: 'Booking Create Api'
      operationId: bookingCreateApi
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  message: 'Booking successfully'
                  data:
                    id: 1
                    user_id: 1
                    seller_id: 1
                    service_id: 1
                    name: 'John Doe'
                    email: john@gmail.com
                    phone: '1234567890'
                    booking_date: '2021-09-30'
                    booking_time_id: 1
                    amount: '100'
                    status: 0
                    created_at: '2021-09-30T11:25:00.000000Z'
                    updated_at: '2021-09-30T11:25:00.000000Z'
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Booking successfully'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      user_id:
                        type: integer
                        example: 1
                      seller_id:
                        type: integer
                        example: 1
                      service_id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: john@gmail.com
                      phone:
                        type: string
                        example: '1234567890'
                      booking_date:
                        type: string
                        example: '2021-09-30'
                      booking_time_id:
                        type: integer
                        example: 1
                      amount:
                        type: string
                        example: '100'
                      status:
                        type: integer
                        example: 0
                      created_at:
                        type: string
                        example: '2021-09-30T11:25:00.000000Z'
                      updated_at:
                        type: string
                        example: '2021-09-30T11:25:00.000000Z'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  statusCode: 401
                  error:
                    message:
                      - 'The service id must be a number greater than 0.'
                      - 'The seller id must be a number greater than 0.'
                      - 'The booking time id must be a number greater than 0.'
                properties:
                  status:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 401
                  error:
                    type: object
                    properties:
                      message:
                        type: array
                        example:
                          - 'The service id must be a number greater than 0.'
                          - 'The seller id must be a number greater than 0.'
                          - 'The booking time id must be a number greater than 0.'
                        items:
                          type: string
      tags:
        - 'Appointments APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service_id:
                  type: string
                  description: service_id.
                  example: iste
                seller_id:
                  type: string
                  description: seller_id.
                  example: fugiat
                booking_date:
                  type: string
                  description: booking_date.
                  example: aspernatur
                amount:
                  type: string
                  description: amount.
                  example: asperiores
                booking_time_id:
                  type: string
                  description: booking_time_id.
                  example: ullam
              required:
                - service_id
                - seller_id
                - booking_date
                - amount
                - booking_time_id
      security: []
  /api/v1/users/booking/list:
    post:
      summary: 'Booking List API'
      operationId: bookingListAPI
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  data:
                    -
                      id: '1'
                      time: '9:00 am - 10:00 am'
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  data:
                    type: array
                    example:
                      -
                        id: '1'
                        time: '9:00 am - 10:00 am'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: '1'
                        time:
                          type: string
                          example: '9:00 am - 10:00 am'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  statusCode: 401
                  error:
                    message:
                      - 'No detail found!'
                properties:
                  status:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 401
                  error:
                    type: object
                    properties:
                      message:
                        type: array
                        example:
                          - 'No detail found!'
                        items:
                          type: string
      tags:
        - 'Appointments APIs'
      security: []
  /api/v1/users/booking/details:
    post:
      summary: 'Get Booking Details API'
      operationId: getBookingDetailsAPI
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  message: 'Booking found successfully.'
                  data:
                    user:
                      id: 1
                      name: 'John Doe'
                      email: johh@yopmail.com
                      phone: '1234567890'
                      zipcode: '123456'
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Booking found successfully.'
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'John Doe'
                          email:
                            type: string
                            example: johh@yopmail.com
                          phone:
                            type: string
                            example: '1234567890'
                          zipcode:
                            type: string
                            example: '123456'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No detail found!'
                  status: false
                properties:
                  message:
                    type: string
                    example: 'No detail found!'
                  status:
                    type: boolean
                    example: false
      tags:
        - 'Appointments APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appointment_id:
                  type: number
                  description: ''
                  example: 102970.0
              required:
                - appointment_id
      security: []
  /api/v1/users/booking/review/submit:
    post:
      summary: 'Review Submit API'
      operationId: reviewSubmitAPI
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  data:
                    id: 1
                    name: 'John Doe'
                    email: john@yopmail.com
                    phone: '1234567890'
                    zipcode: '123456'
                    status: 1
                    profile_picture: customer/2021-08-11-1628661381.jpg
                    created_at: '2023-03-15T06:15:27.000000Z'
                    updated_at: '2023-04-25T06:57:45.000000Z'
                  message: 'Profile updated successfully'
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: john@yopmail.com
                      phone:
                        type: string
                        example: '1234567890'
                      zipcode:
                        type: string
                        example: '123456'
                      status:
                        type: integer
                        example: 1
                      profile_picture:
                        type: string
                        example: customer/2021-08-11-1628661381.jpg
                      created_at:
                        type: string
                        example: '2023-03-15T06:15:27.000000Z'
                      updated_at:
                        type: string
                        example: '2023-04-25T06:57:45.000000Z'
                  message:
                    type: string
                    example: 'Profile updated successfully'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No detail found!'
                  status: false
                properties:
                  message:
                    type: string
                    example: 'No detail found!'
                  status:
                    type: boolean
                    example: false
      tags:
        - 'Appointments APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                appointment_id:
                  type: string
                  description: appointment_id
                  example: aut
                service_id:
                  type: required
                  description: 'User service_id'
                  example: eligendi
                comment:
                  type: string
                  description: comment
                  example: distinctio
                rating:
                  type: string
                  description: rating
                  example: laboriosam
              required:
                - appointment_id
                - comment
                - rating
      security: []
  /api/v1/users/register:
    post:
      summary: 'Registration Api'
      operationId: registrationApi
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"status\": true,\n\"statusCode\": 200,\n\"message\": \"Registration successfully.\",\n\"data\": {\n     \"id\": 1,\n     \"name\": \"John Doe\",\n     \"email\": \"johh@yopmail.com\",\n     \"phone\": \"1234567890\",\n     \"zipcode\": \"123456\",\n     \"status\": 1,\n    }\n}"
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No detail found!'
                  status: false
                properties:
                  message:
                    type: string
                    example: 'No detail found!'
                  status:
                    type: boolean
                    example: false
      tags:
        - 'Authentication APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                  description: first_name.
                  example: quam
                last_name:
                  type: string
                  description: last_name.
                  example: qui
                email:
                  type: string
                  description: 'email, must be unique.'
                  example: ilene.rath@example.org
                phone:
                  type: string
                  description: phone.
                  example: amet
                zipcode:
                  type: string
                  description: zipcode.
                  example: autem
                password:
                  type: string
                  description: 'password, must be 8 character long.'
                  example: 'jgW5{/[/?,jDBe}h'
                confirm_password:
                  type: string
                  description: 'The value and <code>password</code> must match. Must be at least 8 characters.'
                  example: xuafmqzlsvsqrnocdhhosisdtrsnubsmuetnzwmmutkdgzbiqfzvfwiijjdtzwuzabt
                user_type:
                  type: string
                  description: 'user_type, must be USER or BUSINESS_OWNER.'
                  example: excepturi
              required:
                - first_name
                - last_name
                - email
                - phone
                - zipcode
                - password
                - confirm_password
                - user_type
      security: []
  /api/v1/users/login:
    post:
      summary: 'login Api'
      operationId: loginApi
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  message: 'Login successfully.'
                  data:
                    user:
                      id: 1
                      name: 'John Doe'
                      email: johh@yopmail.com
                      phone: '1234567890'
                      zipcode: '123456'
                      status: 1
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Login successfully.'
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'John Doe'
                          email:
                            type: string
                            example: johh@yopmail.com
                          phone:
                            type: string
                            example: '1234567890'
                          zipcode:
                            type: string
                            example: '123456'
                          status:
                            type: integer
                            example: 1
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No detail found!'
                  status: false
                properties:
                  message:
                    type: string
                    example: 'No detail found!'
                  status:
                    type: boolean
                    example: false
      tags:
        - 'Authentication APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'email, must be unique.'
                  example: albin.leuschke@example.com
                password:
                  type: string
                  description: 'password, must be 8 character long.'
                  example: '*|=a/r8Wp3TXCO(X"p'
                user_type:
                  type: string
                  description: 'user_type, must be USER or BUSINESS_OWNER.'
                  example: itaque
              required:
                - email
                - password
                - user_type
      security: []
  /api/v1/users/forget-password:
    post:
      summary: 'Forget Password API'
      operationId: forgetPasswordAPI
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  message: 'Please! check your mail.'
                  data:
                    id: 1
                    name: 'John Doe'
                    email: john@gmail.com
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Please! check your mail.'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: john@gmail.com
        401:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n     \"message\": \"Couldn't find your account!\"\n     \"status\": false\n}"
      tags:
        - 'Forget Password APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: email.
                  example: lbins@example.net
              required:
                - email
      security: []
  /api/v1/category/list:
    get:
      summary: 'Category API'
      operationId: categoryAPI
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  message: 'Category find successfully.'
                  data:
                    -
                      id: '1'
                      name: Women
                      slug: women
                      icon: category/women-hair-cut.png
                    -
                      id: '2'
                      name: "Men's"
                      slug: men
                      icon: category/men-hair-cut.png
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Category find successfully.'
                  data:
                    type: array
                    example:
                      -
                        id: '1'
                        name: Women
                        slug: women
                        icon: category/women-hair-cut.png
                      -
                        id: '2'
                        name: "Men's"
                        slug: men
                        icon: category/men-hair-cut.png
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: '1'
                        name:
                          type: string
                          example: Women
                        slug:
                          type: string
                          example: women
                        icon:
                          type: string
                          example: category/women-hair-cut.png
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  statusCode: 401
                  error:
                    message:
                      - 'No detail found!'
                properties:
                  status:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 401
                  error:
                    type: object
                    properties:
                      message:
                        type: array
                        example:
                          - 'No detail found!'
                        items:
                          type: string
      tags:
        - 'Listing APIs'
      security: []
  /api/v1/category/service-types:
    post:
      summary: 'Service Types By Category Api'
      operationId: serviceTypesByCategoryApi
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  message: 'Service type find successfully'
                  data:
                    -
                      id: 4
                      category_id: 2
                      name: Trimming
                      image: service_type/trimming.png
                      status: 1
                      main: 1
                      created_at: '2023-03-27T06:41:40.000000Z'
                      updated_at: '2023-03-27T06:41:40.000000Z'
                    -
                      id: 5
                      category_id: 2
                      name: Shaving
                      image: service_type/shaving.png
                      status: 1
                      main: 1
                      created_at: '2023-03-27T06:41:40.000000Z'
                      updated_at: '2023-03-27T06:41:40.000000Z'
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Service type find successfully'
                  data:
                    type: array
                    example:
                      -
                        id: 4
                        category_id: 2
                        name: Trimming
                        image: service_type/trimming.png
                        status: 1
                        main: 1
                        created_at: '2023-03-27T06:41:40.000000Z'
                        updated_at: '2023-03-27T06:41:40.000000Z'
                      -
                        id: 5
                        category_id: 2
                        name: Shaving
                        image: service_type/shaving.png
                        status: 1
                        main: 1
                        created_at: '2023-03-27T06:41:40.000000Z'
                        updated_at: '2023-03-27T06:41:40.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 4
                        category_id:
                          type: integer
                          example: 2
                        name:
                          type: string
                          example: Trimming
                        image:
                          type: string
                          example: service_type/trimming.png
                        status:
                          type: integer
                          example: 1
                        main:
                          type: integer
                          example: 1
                        created_at:
                          type: string
                          example: '2023-03-27T06:41:40.000000Z'
                        updated_at:
                          type: string
                          example: '2023-03-27T06:41:40.000000Z'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No detail found!'
                  status: false
                properties:
                  message:
                    type: string
                    example: 'No detail found!'
                  status:
                    type: boolean
                    example: false
      tags:
        - 'Listing APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: string
                  description: 'Category Id'
                  example: non
              required:
                - category_id
      security: []
  /api/v1/service/types:
    get:
      summary: 'Service Type API'
      operationId: serviceTypeAPI
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  message: 'Servicetype find successfully.'
                  data:
                    -
                      id: '1'
                      name: Styling
                      icon: service_type/styling.png
                    -
                      id: '2'
                      name: Spa
                      icon: service_type/spa.png
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Servicetype find successfully.'
                  data:
                    type: array
                    example:
                      -
                        id: '1'
                        name: Styling
                        icon: service_type/styling.png
                      -
                        id: '2'
                        name: Spa
                        icon: service_type/spa.png
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: '1'
                        name:
                          type: string
                          example: Styling
                        icon:
                          type: string
                          example: service_type/styling.png
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  statusCode: 401
                  error:
                    message:
                      - 'No detail found!'
                properties:
                  status:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 401
                  error:
                    type: object
                    properties:
                      message:
                        type: array
                        example:
                          - 'No detail found!'
                        items:
                          type: string
      tags:
        - 'Listing APIs'
      security: []
  /api/v1/service/list:
    get:
      summary: 'Service Listing API'
      operationId: serviceListingAPI
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  message: 'Services find successfully.'
                  data:
                    -
                      id: 1
                      category_id: 1
                      service_type_id: 1
                      additional_service_id: 13
                      duration: '2:30'
                      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur'
                      status: 1
                      popular_services: 1
                      created_at: '2023-03-27T08:48:30.000000Z'
                      updated_at: '2023-04-13T10:57:11.000000Z'
                    -
                      id: 2
                      category_id: 1
                      service_type_id: 1
                      additional_service_id: 14
                      duration: '2:30'
                      description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam'
                      status: 1
                      popular_services: 1
                      created_at: '2023-03-27T08:48:30.000000Z'
                      updated_at: '2023-04-13T10:57:11.000000Z'
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Services find successfully.'
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        category_id: 1
                        service_type_id: 1
                        additional_service_id: 13
                        duration: '2:30'
                        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur'
                        status: 1
                        popular_services: 1
                        created_at: '2023-03-27T08:48:30.000000Z'
                        updated_at: '2023-04-13T10:57:11.000000Z'
                      -
                        id: 2
                        category_id: 1
                        service_type_id: 1
                        additional_service_id: 14
                        duration: '2:30'
                        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam'
                        status: 1
                        popular_services: 1
                        created_at: '2023-03-27T08:48:30.000000Z'
                        updated_at: '2023-04-13T10:57:11.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        category_id:
                          type: integer
                          example: 1
                        service_type_id:
                          type: integer
                          example: 1
                        additional_service_id:
                          type: integer
                          example: 13
                        duration:
                          type: string
                          example: '2:30'
                        description:
                          type: string
                          example: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur'
                        status:
                          type: integer
                          example: 1
                        popular_services:
                          type: integer
                          example: 1
                        created_at:
                          type: string
                          example: '2023-03-27T08:48:30.000000Z'
                        updated_at:
                          type: string
                          example: '2023-04-13T10:57:11.000000Z'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  statusCode: 401
                  error:
                    message:
                      - 'No detail found!'
                properties:
                  status:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 401
                  error:
                    type: object
                    properties:
                      message:
                        type: array
                        example:
                          - 'No detail found!'
                        items:
                          type: string
      tags:
        - 'Listing APIs'
      security: []
  /api/v1/service/list-by-serviceType:
    post:
      summary: 'Service List by Service Types Api'
      operationId: serviceListByServiceTypesApi
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  message: 'Service type find successfully'
                  data:
                    -
                      id: 1
                      user_id: 3
                      service_id: 1
                      rate: '250'
                      status: 1
                      created_at: '2023-03-27T09:42:02.000000Z'
                      updated_at: '2023-03-31T10:12:19.000000Z'
                      service:
                        id: 1
                        category_id: 1
                        service_type_id: 1
                        additional_service_id: 13
                        duration: '2:30'
                        description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur'
                        status: 1
                        popular_services: 1
                        created_at: '2023-03-27T08:48:30.000000Z'
                        updated_at: '2023-04-13T10:57:11.000000Z'
                        additional_service:
                          id: 13
                          name: 'Hair starighning'
                        images:
                          -
                            id: 1
                            service_id: 1
                            slider_image: service/XhIe7mjMDLasIGKWOjiXGYXk2pR3zGcSX5CytQjX.jpg
                            created_at: '2023-03-27T08:48:31.000000Z'
                            updated_at: '2023-03-27T08:48:31.000000Z'
                        seller_service:
                          -
                            id: 1
                            user_id: 3
                            service_id: 1
                            rate: '250'
                            status: 1
                            created_at: '2023-03-27T09:42:02.000000Z'
                            updated_at: '2023-03-31T10:12:19.000000Z'
                        review:
                          -
                            id: 1
                            appointment_id: 3
                            user_id: 2
                            service_id: 1
                            comment: 'good service'
                            rating: '4'
                            created_at: '2023-04-27T04:51:35.000000Z'
                            updated_at: '2023-04-27T04:51:35.000000Z'
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Service type find successfully'
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        user_id: 3
                        service_id: 1
                        rate: '250'
                        status: 1
                        created_at: '2023-03-27T09:42:02.000000Z'
                        updated_at: '2023-03-31T10:12:19.000000Z'
                        service:
                          id: 1
                          category_id: 1
                          service_type_id: 1
                          additional_service_id: 13
                          duration: '2:30'
                          description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur'
                          status: 1
                          popular_services: 1
                          created_at: '2023-03-27T08:48:30.000000Z'
                          updated_at: '2023-04-13T10:57:11.000000Z'
                          additional_service:
                            id: 13
                            name: 'Hair starighning'
                          images:
                            -
                              id: 1
                              service_id: 1
                              slider_image: service/XhIe7mjMDLasIGKWOjiXGYXk2pR3zGcSX5CytQjX.jpg
                              created_at: '2023-03-27T08:48:31.000000Z'
                              updated_at: '2023-03-27T08:48:31.000000Z'
                          seller_service:
                            -
                              id: 1
                              user_id: 3
                              service_id: 1
                              rate: '250'
                              status: 1
                              created_at: '2023-03-27T09:42:02.000000Z'
                              updated_at: '2023-03-31T10:12:19.000000Z'
                          review:
                            -
                              id: 1
                              appointment_id: 3
                              user_id: 2
                              service_id: 1
                              comment: 'good service'
                              rating: '4'
                              created_at: '2023-04-27T04:51:35.000000Z'
                              updated_at: '2023-04-27T04:51:35.000000Z'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        user_id:
                          type: integer
                          example: 3
                        service_id:
                          type: integer
                          example: 1
                        rate:
                          type: string
                          example: '250'
                        status:
                          type: integer
                          example: 1
                        created_at:
                          type: string
                          example: '2023-03-27T09:42:02.000000Z'
                        updated_at:
                          type: string
                          example: '2023-03-31T10:12:19.000000Z'
                        service:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            category_id:
                              type: integer
                              example: 1
                            service_type_id:
                              type: integer
                              example: 1
                            additional_service_id:
                              type: integer
                              example: 13
                            duration:
                              type: string
                              example: '2:30'
                            description:
                              type: string
                              example: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur'
                            status:
                              type: integer
                              example: 1
                            popular_services:
                              type: integer
                              example: 1
                            created_at:
                              type: string
                              example: '2023-03-27T08:48:30.000000Z'
                            updated_at:
                              type: string
                              example: '2023-04-13T10:57:11.000000Z'
                            additional_service:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 13
                                name:
                                  type: string
                                  example: 'Hair starighning'
                            images:
                              type: array
                              example:
                                -
                                  id: 1
                                  service_id: 1
                                  slider_image: service/XhIe7mjMDLasIGKWOjiXGYXk2pR3zGcSX5CytQjX.jpg
                                  created_at: '2023-03-27T08:48:31.000000Z'
                                  updated_at: '2023-03-27T08:48:31.000000Z'
                              items:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    example: 1
                                  service_id:
                                    type: integer
                                    example: 1
                                  slider_image:
                                    type: string
                                    example: service/XhIe7mjMDLasIGKWOjiXGYXk2pR3zGcSX5CytQjX.jpg
                                  created_at:
                                    type: string
                                    example: '2023-03-27T08:48:31.000000Z'
                                  updated_at:
                                    type: string
                                    example: '2023-03-27T08:48:31.000000Z'
                            seller_service:
                              type: array
                              example:
                                -
                                  id: 1
                                  user_id: 3
                                  service_id: 1
                                  rate: '250'
                                  status: 1
                                  created_at: '2023-03-27T09:42:02.000000Z'
                                  updated_at: '2023-03-31T10:12:19.000000Z'
                              items:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    example: 1
                                  user_id:
                                    type: integer
                                    example: 3
                                  service_id:
                                    type: integer
                                    example: 1
                                  rate:
                                    type: string
                                    example: '250'
                                  status:
                                    type: integer
                                    example: 1
                                  created_at:
                                    type: string
                                    example: '2023-03-27T09:42:02.000000Z'
                                  updated_at:
                                    type: string
                                    example: '2023-03-31T10:12:19.000000Z'
                            review:
                              type: array
                              example:
                                -
                                  id: 1
                                  appointment_id: 3
                                  user_id: 2
                                  service_id: 1
                                  comment: 'good service'
                                  rating: '4'
                                  created_at: '2023-04-27T04:51:35.000000Z'
                                  updated_at: '2023-04-27T04:51:35.000000Z'
                              items:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    example: 1
                                  appointment_id:
                                    type: integer
                                    example: 3
                                  user_id:
                                    type: integer
                                    example: 2
                                  service_id:
                                    type: integer
                                    example: 1
                                  comment:
                                    type: string
                                    example: 'good service'
                                  rating:
                                    type: string
                                    example: '4'
                                  created_at:
                                    type: string
                                    example: '2023-04-27T04:51:35.000000Z'
                                  updated_at:
                                    type: string
                                    example: '2023-04-27T04:51:35.000000Z'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No detail found!'
                  status: false
                properties:
                  message:
                    type: string
                    example: 'No detail found!'
                  status:
                    type: boolean
                    example: false
      tags:
        - 'Listing APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service_type:
                  type: string
                  description: ''
                  example: quas
                category_id:
                  type: string
                  description: 'Category Id'
                  example: quos
              required:
                - service_type
                - category_id
      security: []
  /api/v1/service/details:
    post:
      summary: 'Get Service Details API'
      operationId: getServiceDetailsAPI
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"status\": true,\n\"statusCode\": 200,\n\"message\": \"Service found successfully.\",\n\"data\": {\n         \"id\": 5,\n         \"duration\": \"1:15\",\n         \"description\": \"lorem ipsum dolor sit amet\",\n         \"additional_service_id\": 3,\n         \"images\": [\n            {\n                 \"id\": 17,\n                 \"service_id\": 5,\n                 \"slider_image\": \"service/oAFHFz3En6styJNLxwepcJCxVZhg3Q7bujyJaTsy.jpg\",\n                 \"created_at\": \"2023-03-27T09:41:10.000000Z\",\n                 \"updated_at\": \"2023-03-27T09:41:10.000000Z\"\n             }\n         ],\n         \"additional_service\": {\n             \"id\": 3,\n             \"service_type_id\": 6,\n             \"name\": \"Shaving + Hair cutting + Massage\",\n            \"status\": 1,\n             \"created_at\": \"2023-03-27T08:45:08.000000Z\",\n             \"updated_at\": \"2023-03-27T08:45:08.000000Z\"\n         },\n         \"seller_service\": [\n             {\n                 \"id\": 6,\n                 \"user_id\": 6,\n                 \"service_id\": 5,\n                 \"rate\": \"450\",\n                 \"status\": 1,\n                 \"created_at\": \"2023-04-13T06:45:16.000000Z\",\n                 \"updated_at\": \"2023-04-13T06:45:16.000000Z\",\n                 \"user\": {\n                     \"id\": 6,\n                     \"shop_name\": \"Diamond Shop\"\n                 }\n             }\n         ]\n     }\n}\n}"
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No detail found!'
                  status: false
                properties:
                  message:
                    type: string
                    example: 'No detail found!'
                  status:
                    type: boolean
                    example: false
      tags:
        - 'Listing APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service_id:
                  type: number
                  description: ''
                  example: 68802286.5
              required:
                - service_id
      security: []
  /api/v1/service/populars:
    get:
      summary: 'Popular service API'
      operationId: popularServiceAPI
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"status\": true,\n  \"statusCode\": 200,\n  \"data\": [\n      \"id\": 1,\n      \"category_id\": 1,\n      \"service_type_id\": 1,\n      \"additional_service_id\": 13,\n      \"duration\": \"2:30\",\n      \"description\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur\",\n      \"status\": 1,\n      \"popular_services\": 1,\n      \"created_at\": \"2023-03-27T08:48:30.000000Z\",\n      \"updated_at\": \"2023-04-13T10:57:11.000000Z\",\n      \"additional_service\": {\n           \"id\": 13,\n          \"service_type_id\": 1,\n          \"name\": \"Hair starighning\",\n          \"status\": 1,\n          \"created_at\": \"2023-03-27T08:47:47.000000Z\",\n          \"updated_at\": \"2023-03-27T08:47:47.000000Z\"\n      },\n      \"review\": [\n          {\n              \"id\": 1,\n              \"appointment_id\": 3,\n              \"user_id\": 2,\n              \"service_id\": 1,\n              \"comment\": \"good service\",\n              \"rating\": \"4\",\n              \"created_at\": \"2023-04-27T04:51:35.000000Z\",\n             \"updated_at\": \"2023-04-27T04:51:35.000000Z\"\n          }\n      ]\n  ]\n}"
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  statusCode: 401
                  error:
                    message:
                      - 'No detail found!'
                properties:
                  status:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 401
                  error:
                    type: object
                    properties:
                      message:
                        type: array
                        example:
                          - 'No detail found!'
                        items:
                          type: string
      tags:
        - 'Listing APIs'
      security: []
  /api/v1/appointment/booking-times:
    get:
      summary: 'Booking Time API'
      operationId: bookingTimeAPI
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  data:
                    -
                      id: '1'
                      time: '9:00 am - 10:00 am'
                    -
                      id: 2
                      time: '10:00 am - 11:00 am'
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  data:
                    type: array
                    example:
                      -
                        id: '1'
                        time: '9:00 am - 10:00 am'
                      -
                        id: 2
                        time: '10:00 am - 11:00 am'
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: '1'
                        time:
                          type: string
                          example: '9:00 am - 10:00 am'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  statusCode: 401
                  error:
                    message:
                      - 'No detail found!'
                properties:
                  status:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 401
                  error:
                    type: object
                    properties:
                      message:
                        type: array
                        example:
                          - 'No detail found!'
                        items:
                          type: string
      tags:
        - 'Listing APIs'
      security: []
  /api/v1/users/profile/update:
    post:
      summary: 'Profile Update API'
      operationId: profileUpdateAPI
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  data:
                    id: 1
                    name: 'John Doe'
                    shop_name: 'John Doe Shop'
                    email: john@yopmail.com
                    phone: '1234567890'
                    zipcode: '123456'
                    email_verified_at: null
                    profile_picture: null
                    social_type: null
                    status: 1
                    login_status: 0
                    google_id: null
                    facebook_id: null
                    password_update_time: null
                    created_at: '2023-03-15T06:15:27.000000Z'
                    updated_at: '2023-04-25T06:57:45.000000Z'
                    deleted_at: null
                  message: 'Profile updated successfully'
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      shop_name:
                        type: string
                        example: 'John Doe Shop'
                      email:
                        type: string
                        example: john@yopmail.com
                      phone:
                        type: string
                        example: '1234567890'
                      zipcode:
                        type: string
                        example: '123456'
                      email_verified_at:
                        type: string
                        example: null
                      profile_picture:
                        type: string
                        example: null
                      social_type:
                        type: string
                        example: null
                      status:
                        type: integer
                        example: 1
                      login_status:
                        type: integer
                        example: 0
                      google_id:
                        type: string
                        example: null
                      facebook_id:
                        type: string
                        example: null
                      password_update_time:
                        type: string
                        example: null
                      created_at:
                        type: string
                        example: '2023-03-15T06:15:27.000000Z'
                      updated_at:
                        type: string
                        example: '2023-04-25T06:57:45.000000Z'
                      deleted_at:
                        type: string
                        example: null
                  message:
                    type: string
                    example: 'Profile updated successfully'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No detail found!'
                  status: false
                properties:
                  message:
                    type: string
                    example: 'No detail found!'
                  status:
                    type: boolean
                    example: false
      tags:
        - 'Profile APIs'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: name
                  example: enim
                email:
                  type: string
                  format: binary
                  description: 'User email'
                phone:
                  type: string
                  description: phone
                  example: ea
              required:
                - name
                - email
                - phone
      security: []
  /api/v1/users/profile/change-password:
    post:
      summary: 'Change Password API'
      operationId: changePasswordAPI
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"status\": true,\n\"statusCode\": 200,\n\"data\": {\n    \"id\": 1,\n    \"name\": \"John Doe\",\n    \"shop_name\": \"John Doe Shop\",\n    \"email\": \"john@yopmail.com\",\n    \"phone\": \"1234567890\",\n    \"zipcode\": \"123456\",\n    \"email_verified_at\": null,\n    \"profile_picture\": null,\n    \"social_type\": null,\n    \"status\": 1,\n    \"login_status\": 0,\n    \"google_id\": null,\n    \"facebook_id\": null,\n    \"password_update_time\": null,\n    \"created_at\": \"2023-03-15T06:15:27.000000Z\",\n    \"updated_at\": \"2023-04-25T06:57:45.000000Z\",\n    \"deleted_at\": null\n }\n \"message\": \"Password change successfully.\"\n}"
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  statusCode: 401
                  error:
                    message:
                      - 'The Old Password field is required.'
                      - 'The New Password field is required.'
                      - 'The Confirm Password field is required.'
                properties:
                  status:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 401
                  error:
                    type: object
                    properties:
                      message:
                        type: array
                        example:
                          - 'The Old Password field is required.'
                          - 'The New Password field is required.'
                          - 'The Confirm Password field is required.'
                        items:
                          type: string
      tags:
        - 'Profile APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                  description: 'Old Password'
                  example: blanditiis
                new_password:
                  type: string
                  description: 'New Password'
                  example: tempore
                comfirm_password:
                  type: string
                  description: 'Confirm Password'
                  example: ut
              required:
                - old_password
                - new_password
                - comfirm_password
      security: []
  /api/v1/sellers/me:
    post:
      summary: 'Get Seller Details API'
      operationId: getSellerDetailsAPI
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"status\": true,\n\"statusCode\": 200,\n\"message\": \"Seller Profile found successfully.\",\n\"data\": {\n\"user\": {\n\"id\": 1,\n\"name\": \"John Doe\",\n\"email\": \"johh@yopmail.com\",\n\"phone\": \"1234567890\",\n\"zipcode\": \"123456\",\n\"shop_name\": \"Shop Name\",\n\"profile_picture\": \"seller/20210914121212image.jpg\",\n}\n}\n}"
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No detail found!'
                  status: false
                properties:
                  message:
                    type: string
                    example: 'No detail found!'
                  status:
                    type: boolean
                    example: false
      tags:
        - 'Seller details APIs'
      security: []
  /api/v1/sellers/profile/update:
    post:
      summary: 'Seller Profile Update API'
      operationId: sellerProfileUpdateAPI
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  data:
                    id: 1
                    name: 'John Doe'
                    email: john@yopmail.com
                    phone: '1234567890'
                    zipcode: '123456'
                    shop_name: 'Shop Name'
                    status: 1
                    profile_picture: seller/20210914121212image.jpg
                    created_at: '2023-03-15T06:15:27.000000Z'
                    updated_at: '2023-04-25T06:57:45.000000Z'
                  message: 'Profile updated successfully'
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: john@yopmail.com
                      phone:
                        type: string
                        example: '1234567890'
                      zipcode:
                        type: string
                        example: '123456'
                      shop_name:
                        type: string
                        example: 'Shop Name'
                      status:
                        type: integer
                        example: 1
                      profile_picture:
                        type: string
                        example: seller/20210914121212image.jpg
                      created_at:
                        type: string
                        example: '2023-03-15T06:15:27.000000Z'
                      updated_at:
                        type: string
                        example: '2023-04-25T06:57:45.000000Z'
                  message:
                    type: string
                    example: 'Profile updated successfully'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No detail found!'
                  status: false
                properties:
                  message:
                    type: string
                    example: 'No detail found!'
                  status:
                    type: boolean
                    example: false
      tags:
        - 'Seller details APIs'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: name
                  example: delectus
                email:
                  type: string
                  format: binary
                  description: 'User email'
                phone:
                  type: string
                  description: phone
                  example: ut
                shop_name:
                  type: string
                  description: ''
                  example: ad
              required:
                - name
                - email
                - phone
                - shop_name
      security: []
  /api/v1/sellers/profile/delete:
    delete:
      summary: 'Delete Profile API'
      operationId: deleteProfileAPI
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  data:
                    id: 1
                    name: 'John Doe'
                    email: john@yopmail.com
                    phone: '1234567890'
                    zipcode: '123456'
                    shop_name: 'Shop Name'
                    status: 1
                    profile_picture: user/GXQaUw5vXxNTXQ4YJ2qJNlJ2O9naz8KDHTJNRyvr.png
                    created_at: '2023-03-15T06:15:27.000000Z'
                    updated_at: '2023-04-25T06:57:45.000000Z'
                  message: 'Profile deleted successfully'
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: 'John Doe'
                      email:
                        type: string
                        example: john@yopmail.com
                      phone:
                        type: string
                        example: '1234567890'
                      zipcode:
                        type: string
                        example: '123456'
                      shop_name:
                        type: string
                        example: 'Shop Name'
                      status:
                        type: integer
                        example: 1
                      profile_picture:
                        type: string
                        example: user/GXQaUw5vXxNTXQ4YJ2qJNlJ2O9naz8KDHTJNRyvr.png
                      created_at:
                        type: string
                        example: '2023-03-15T06:15:27.000000Z'
                      updated_at:
                        type: string
                        example: '2023-04-25T06:57:45.000000Z'
                  message:
                    type: string
                    example: 'Profile deleted successfully'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  statusCode: 401
                  error:
                    message:
                      - 'User not found.'
                properties:
                  status:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 401
                  error:
                    type: object
                    properties:
                      message:
                        type: array
                        example:
                          - 'User not found.'
                        items:
                          type: string
      tags:
        - 'Seller details APIs'
      security: []
  /api/v1/home/list:
    post:
      summary: 'Service List API'
      operationId: serviceListAPI
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  data:
                    -
                      service_id: '1'
                      service:
                        id: 1
                        category_id: 1
                        service_type_id: 1
                        additional_service_id: 13
                        duration: '2:30'
                        description: 'lorem ipsum dolor sit amet'
                        status: 1
                        popular_services: 1
                        created_at: '2021-09-14T12:12:12.000000Z'
                        updated_at: '2021-09-14T12:12:12.000000Z'
                        additional_service:
                          id: 13
                          name: 'Hair starighning'
                        images:
                          -
                            id: 1
                            service_id: 1
                            slider_image: service/XhIe7mjMDLasIGKWOjiXGYXk2pR3zGcSX5CytQjX.jpg
                            created_at: '2023-03-27T08:48:31.000000Z'
                            updated_at: '2023-03-27T08:48:31.000000Z'
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  data:
                    type: array
                    example:
                      -
                        service_id: '1'
                        service:
                          id: 1
                          category_id: 1
                          service_type_id: 1
                          additional_service_id: 13
                          duration: '2:30'
                          description: 'lorem ipsum dolor sit amet'
                          status: 1
                          popular_services: 1
                          created_at: '2021-09-14T12:12:12.000000Z'
                          updated_at: '2021-09-14T12:12:12.000000Z'
                          additional_service:
                            id: 13
                            name: 'Hair starighning'
                          images:
                            -
                              id: 1
                              service_id: 1
                              slider_image: service/XhIe7mjMDLasIGKWOjiXGYXk2pR3zGcSX5CytQjX.jpg
                              created_at: '2023-03-27T08:48:31.000000Z'
                              updated_at: '2023-03-27T08:48:31.000000Z'
                    items:
                      type: object
                      properties:
                        service_id:
                          type: string
                          example: '1'
                        service:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 1
                            category_id:
                              type: integer
                              example: 1
                            service_type_id:
                              type: integer
                              example: 1
                            additional_service_id:
                              type: integer
                              example: 13
                            duration:
                              type: string
                              example: '2:30'
                            description:
                              type: string
                              example: 'lorem ipsum dolor sit amet'
                            status:
                              type: integer
                              example: 1
                            popular_services:
                              type: integer
                              example: 1
                            created_at:
                              type: string
                              example: '2021-09-14T12:12:12.000000Z'
                            updated_at:
                              type: string
                              example: '2021-09-14T12:12:12.000000Z'
                            additional_service:
                              type: object
                              properties:
                                id:
                                  type: integer
                                  example: 13
                                name:
                                  type: string
                                  example: 'Hair starighning'
                            images:
                              type: array
                              example:
                                -
                                  id: 1
                                  service_id: 1
                                  slider_image: service/XhIe7mjMDLasIGKWOjiXGYXk2pR3zGcSX5CytQjX.jpg
                                  created_at: '2023-03-27T08:48:31.000000Z'
                                  updated_at: '2023-03-27T08:48:31.000000Z'
                              items:
                                type: object
                                properties:
                                  id:
                                    type: integer
                                    example: 1
                                  service_id:
                                    type: integer
                                    example: 1
                                  slider_image:
                                    type: string
                                    example: service/XhIe7mjMDLasIGKWOjiXGYXk2pR3zGcSX5CytQjX.jpg
                                  created_at:
                                    type: string
                                    example: '2023-03-27T08:48:31.000000Z'
                                  updated_at:
                                    type: string
                                    example: '2023-03-27T08:48:31.000000Z'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  statusCode: 401
                  error:
                    message:
                      - 'No detail found!'
                properties:
                  status:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 401
                  error:
                    type: object
                    properties:
                      message:
                        type: array
                        example:
                          - 'No detail found!'
                        items:
                          type: string
      tags:
        - 'Service  APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service_name:
                  type: string
                  description: ''
                  example: ullam
              required:
                - service_name
      security: []
  /api/v1/home/best-sellers:
    post:
      summary: 'Best Seller API'
      operationId: bestSellerAPI
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  message: 'Best seller find successfully'
                  data:
                    -
                      image: user/2021-05-12-1620813781.jpg
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Best seller find successfully'
                  data:
                    type: array
                    example:
                      -
                        image: user/2021-05-12-1620813781.jpg
                    items:
                      type: object
                      properties:
                        image:
                          type: string
                          example: user/2021-05-12-1620813781.jpg
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  statusCode: 401
                  error:
                    message:
                      - 'No detail found!'
                properties:
                  status:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 401
                  error:
                    type: object
                    properties:
                      message:
                        type: array
                        example:
                          - 'No detail found!'
                        items:
                          type: string
      tags:
        - 'Service  APIs'
      security: []
  /api/v1/home/banners:
    post:
      summary: 'Banner API'
      operationId: bannerAPI
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "{\n\"status\": true,\n\"statusCode\": 200,\n\"message\": \"Banner find successfully\",\n\"data\": {\n     \"middle_banner_1\": \"home/middle_banner_1.jpg\",\n     \"middle_banner_2\": \"home/middle_banner_2.jpg\",\n     \"middle_banner_3\": \"home/middle_banner_3.jpg\"\n}"
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  statusCode: 401
                  error:
                    message:
                      - 'No detail found!'
                properties:
                  status:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 401
                  error:
                    type: object
                    properties:
                      message:
                        type: array
                        example:
                          - 'No detail found!'
                        items:
                          type: string
      tags:
        - 'Service  APIs'
      security: []
  '/api/v1/auth/{provider}':
    get:
      summary: 'Getting Strarted Api.'
      operationId: gettingStrartedApi
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  message: 'Logged in successfully.'
                  data:
                    auth_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1N
                    user_details:
                      id: 1
                      name: 'John Doe'
                      email: john@gmail.com
                      email_verified_at: null
                      phone: '1234567890'
                      zipcode: '123456'
                      status: 1
                      profile_picture: user/20210914121212image.jpg
                      created_at: '2021-09-14T12:12:12.000000Z'
                      updated_at: '2021-09-14T12:12:12.000000Z'
                      deleted_at: null
                      login_status: 1
                      google_id: '1234567890'
                      social_type: google
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Logged in successfully.'
                  data:
                    type: object
                    properties:
                      auth_token:
                        type: string
                        example: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1N
                      user_details:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'John Doe'
                          email:
                            type: string
                            example: john@gmail.com
                          email_verified_at:
                            type: string
                            example: null
                          phone:
                            type: string
                            example: '1234567890'
                          zipcode:
                            type: string
                            example: '123456'
                          status:
                            type: integer
                            example: 1
                          profile_picture:
                            type: string
                            example: user/20210914121212image.jpg
                          created_at:
                            type: string
                            example: '2021-09-14T12:12:12.000000Z'
                          updated_at:
                            type: string
                            example: '2021-09-14T12:12:12.000000Z'
                          deleted_at:
                            type: string
                            example: null
                          login_status:
                            type: integer
                            example: 1
                          google_id:
                            type: string
                            example: '1234567890'
                          social_type:
                            type: string
                            example: google
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  statusCode: 401
                  error:
                    message:
                      - 'No detail found!'
                properties:
                  status:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 401
                  error:
                    type: object
                    properties:
                      message:
                        type: array
                        example:
                          - 'No detail found!'
                        items:
                          type: string
      tags:
        - 'Social Login APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                provider:
                  type: string
                  description: 'provider, must be google or facebook.'
                  example: quia
              required:
                - provider
      security: []
    parameters:
      -
        in: path
        name: provider
        description: ''
        example: omnis
        required: true
        schema:
          type: string
  '/api/v1/auth/callback/{provider}':
    get:
      summary: 'Social login Api.'
      operationId: socialLoginApi
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  message: 'Logged in successfully.'
                  data:
                    auth_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1N
                    user_details:
                      id: 1
                      name: 'John Doe'
                      email: john@gmail.com
                      email_verified_at: null
                      phone: '1234567890'
                      zipcode: '123456'
                      status: 1
                      profile_picture: user/20210914121212image.jpg
                      created_at: '2021-09-14T12:12:12.000000Z'
                      updated_at: '2021-09-14T12:12:12.000000Z'
                      deleted_at: null
                      login_status: 1
                      google_id: '1234567890'
                      social_type: google
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Logged in successfully.'
                  data:
                    type: object
                    properties:
                      auth_token:
                        type: string
                        example: eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1N
                      user_details:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'John Doe'
                          email:
                            type: string
                            example: john@gmail.com
                          email_verified_at:
                            type: string
                            example: null
                          phone:
                            type: string
                            example: '1234567890'
                          zipcode:
                            type: string
                            example: '123456'
                          status:
                            type: integer
                            example: 1
                          profile_picture:
                            type: string
                            example: user/20210914121212image.jpg
                          created_at:
                            type: string
                            example: '2021-09-14T12:12:12.000000Z'
                          updated_at:
                            type: string
                            example: '2021-09-14T12:12:12.000000Z'
                          deleted_at:
                            type: string
                            example: null
                          login_status:
                            type: integer
                            example: 1
                          google_id:
                            type: string
                            example: '1234567890'
                          social_type:
                            type: string
                            example: google
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  statusCode: 401
                  error:
                    message:
                      - 'No detail found!'
                properties:
                  status:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 401
                  error:
                    type: object
                    properties:
                      message:
                        type: array
                        example:
                          - 'No detail found!'
                        items:
                          type: string
      tags:
        - 'Social Login APIs'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                provider:
                  type: string
                  description: 'provider, must be google or facebook.'
                  example: voluptates
              required:
                - provider
      security: []
    parameters:
      -
        in: path
        name: provider
        description: ''
        example: incidunt
        required: true
        schema:
          type: string
  /api/v1/users/me:
    post:
      summary: 'Get Profile Details API'
      operationId: getProfileDetailsAPI
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  message: 'Profile found successfully.'
                  data:
                    user:
                      id: 1
                      name: 'John Doe'
                      email: johh@yopmail.com
                      phone: '1234567890'
                      zipcode: '123456'
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Profile found successfully.'
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 1
                          name:
                            type: string
                            example: 'John Doe'
                          email:
                            type: string
                            example: johh@yopmail.com
                          phone:
                            type: string
                            example: '1234567890'
                          zipcode:
                            type: string
                            example: '123456'
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'No detail found!'
                  status: false
                properties:
                  message:
                    type: string
                    example: 'No detail found!'
                  status:
                    type: boolean
                    example: false
      tags:
        - 'User details APIs'
      security: []
  /api/v1/users:
    get:
      summary: 'All User Details API'
      operationId: allUserDetailsAPI
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: true
                  statusCode: 200
                  data:
                    -
                      id: '1'
                      name: 'John Doe'
                      email: johh@yopmail.com
                      phone: '1234567890'
                      zipcode: '123456'
                      profile_picture: profile_picture/1629796360.jpg
                properties:
                  status:
                    type: boolean
                    example: true
                  statusCode:
                    type: integer
                    example: 200
                  data:
                    type: array
                    example:
                      -
                        id: '1'
                        name: 'John Doe'
                        email: johh@yopmail.com
                        phone: '1234567890'
                        zipcode: '123456'
                        profile_picture: profile_picture/1629796360.jpg
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: '1'
                        name:
                          type: string
                          example: 'John Doe'
                        email:
                          type: string
                          example: johh@yopmail.com
                        phone:
                          type: string
                          example: '1234567890'
                        zipcode:
                          type: string
                          example: '123456'
                        profile_picture:
                          type: string
                          example: profile_picture/1629796360.jpg
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: false
                  statusCode: 401
                  error:
                    message:
                      - 'No detail found!'
                properties:
                  status:
                    type: boolean
                    example: false
                  statusCode:
                    type: integer
                    example: 401
                  error:
                    type: object
                    properties:
                      message:
                        type: array
                        example:
                          - 'No detail found!'
                        items:
                          type: string
      tags:
        - 'User details APIs'
      security: []
tags:
  -
    name: 'Appointments APIs'
    description: "\nAPIs for Appointments"
  -
    name: 'Authentication APIs'
    description: "\nAPIs for Authentication"
  -
    name: 'Forget Password APIs'
    description: "\nAPIs for Forget Password"
  -
    name: 'Listing APIs'
    description: "\nAPIs for Listing"
  -
    name: 'Profile APIs'
    description: "\nAPIs for Profile"
  -
    name: 'Seller details APIs'
    description: "\nAPIs for Seller details"
  -
    name: 'Service  APIs'
    description: "\nAPIs for Services"
  -
    name: 'Social Login APIs'
    description: "\nAPIs for Social Login"
  -
    name: 'User details APIs'
    description: "\nAPIs for User details"
